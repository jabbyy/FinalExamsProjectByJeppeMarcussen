@page "/CreateUserProfile"
@using Models
@using Services
@inject NavigationManager _navigationManager;
@inject UserProfileService _UserServiceContext;
<PageTitle>Create User Profile</PageTitle>


<AuthorizeView>
    <Authorized>

<h3>Add your user information</h3>
<div class="row">
    <div class="col-md-4">
        <form>
            <div class="form-group">
                <label>First Name</label>
                <input type="text" name="FirstName" @bind="FirstName" class="form-control" />
            </div>
            <div class="form-group">
                <label>Last Name</label>
                <input type="text" name="LastName" @bind="LastName" class="form-control" />
            </div>
            <div class="form-group">
                <label>City</label>
                <input type="text" name="City" @bind="City" class="form-control" />
            </div>
            <div class="form-group">
                <label>Postal Code</label>
                <input type="number" name="Postal" @bind="Postal" class="form-control" maxlength="4" />
            </div>
            <div class="form-group">
                <label>Age</label>
                <input type="number" name="Age" @bind="Age" class="form-control" />
            </div>
            <div>
                <br />
                <button @onclick="HandleValidSubmit" type="submit" class="btn btn-primary">Save</button>
                <button type="reset" class="btn btn-danger">Clear All</button>
            </div>
            <div>
                <p>@Error</p>
            </div>
            <p>@Error</p>
        </form>
    </div>
</div>
@if (addedSuccessfully)
{
    <p style="color: green;">Category added successfully!</p>
}
    </Authorized>
    <NotAuthorized>
        <p>You are not authorized to view this content! </p>
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool addedSuccessfully = false;
    public string Error { get; set; }
    public string UserEmail { get; set; }
    public string FirstName { get; set; }
    public string LastName { get; set; }
    public string City { get; set; }
    public int Postal { get; set; }
    public int Age { get; set; }

    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationStateTask { get; set; }
    private UserInfo userInfo = new UserInfo();

    protected async override void OnInitialized()
    {
        var authstate = await AuthenticationStateTask;
        var user = authstate.User;
        if (user != null)
        {
            UserEmail = user.Identity.Name;
        }
    }

    private async void HandleValidSubmit()
    {
        try
        {
            await _UserServiceContext.CreateProfile(userInfo);
            addedSuccessfully = true;



        }
        catch (Exception ex)
        {
            string message = ex.Message;
        }

    }
}
